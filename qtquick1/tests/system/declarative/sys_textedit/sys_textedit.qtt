/****************************************************************************
**
** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/legal
**
** This file is part of the FOO module of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:LGPL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Digia.  For licensing terms and
** conditions see http://qt.digia.com/licensing.  For further information
** use the contact form at http://qt.digia.com/contact-us.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Digia gives you certain additional
** rights.  These rights are described in the Digia Qt LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3.0 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU General Public License version 3.0 requirements will be
** met: http://www.gnu.org/copyleft/gpl.html.
**
**
** $QT_END_LICENSE$
**
****************************************************************************/


testcase = {

  select_text: function()
  {
      prompt(twiki('---++ Text Selection

| *Step* | *Verification* |
| Execute systemtests/Qt/examples/declarative/textedit/textedit.qml | |
| Enter Hello World into the green textedit field | Hello World is shown |
| Press the Select Word button, ensuring the previously entered text in no longer in pre-commit mode | World is selected |
| Press the Select All button | Hello World is selected |
| Press the Select None button | No text is selected |
| Press the Mouse Select button | The button turns green and indicates Mouse On |
| Click and drag over some text | Only that text is selected. On sans-keyboard Symbian, the soft keyboard may show with selected text highlighted |
| If the soft keyboard is shown, close it |  |
| Press the Mouse Select button | The button turns gray and indicates Mouse Off |
| Click and drag over some text | No text is selected. On sans-keyboard Symbian, the soft keyboard may show |
'));
  },

  cut_copy_and_paste: function()
  {
      prompt(twiki('---++ Cut, copy and paste

| *Step* | *Verification* |
| Execute systemtests/Qt/examples/declarative/textedit/textedit.qml | |
| Enter Hello World into the green textedit field | Hello World is shown |
| Press the Select All button | Hello World is selected |
| Press the Copy Button | |
| Press the Paste Button | Hello World is copied to the light-blue textedit |
| Press the Select Word button | World is highlighted |
| Press the Cut button | World is removed from the green textedit |
| Press the Paste button | World is added to the light-blue textedit |
'));
  },

  styling: function()
  {
      prompt(twiki('---++ Text Styling

| *Step* | *Verification* |
| Execute systemtests/Qt/examples/declarative/textedit/textedit.qml | |
| Enter Hello World into the green textedit field | Hello World is shown |
| Press the Bold button | Hello World is now in bold |
| Press the Italics button  | Hello World is now in italics |
| Press the Strikeout button | Hello World now has a line passing through it |
| Press the Underline button | Hello World is now underlined | '));
  },

  cursor_behavior: function()
  {
      prompt(twiki('---++ Cursor Behavior

| *Step* | *Verification* |
| Execute systemtests/Qt/examples/declarative/textedit/textedit.qml | The Cursor button shows enabled (green) |
| Enter enough text into the field such that it passes beyond the far right | The text wraps to line 2 |
| Press the Cursor button as to disable it | The cursor disappears |
| Press the Cursor button as to enable it | The cursor appears | '));
  },

  capitalization: function()
  {
      prompt(twiki('---++ Capitalization

| *Step* | *Verification* |
| Execute systemtests/Qt/examples/declarative/textedit/textedit.qml | |
| Enter Hello to this World into the green textedit field | Hello to this World is shown |
| Press the All Upper button | The text is converted to all upper case |
| Press the All Lower button | The text is converted to all lower case |
| Press the Small Caps button | The text is converted to all small sized upper case characters |
| Press the Capitalize button | The text is shown with each first character of every word capitalized | '));
  }

}
