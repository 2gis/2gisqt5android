/****************************************************************************
**
** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/legal
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Digia.  For licensing terms and
** conditions see http://qt.digia.com/licensing.  For further information
** use the contact form at http://qt.digia.com/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.  Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: http://www.gnu.org/copyleft/fdl.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \page qtmodules.html
    \title All Modules
    \brief A list of all modules in Qt 5.

    \ingroup classlists

    \brief Qt 5 consists of essential modules, add-on modules, and tools.

    \section1 Qt Essentials

    Qt essentials define the foundation of Qt on all platforms. They are
    available on all supported development platforms and on the tested target
    platforms. They will remain source and binary compatible during Qt 5.

    Essential modules are general and useful for a majority of Qt applications.
    A module that is used for a special purpose is considered an add-on module
    even if it is available on all supported platforms.

    The following table lists the Qt essentials:

    \table 80%
    \header
        \li Module
        \li Description
    \row
        \li \l{Qt Core}
        \li Core non-graphical classes used by other modules.
    \row
        \li \l{Qt GUI}
        \li Base classes for graphical user interface (GUI) components.
            Includes OpenGL.
    \row
        \li \l{Qt Multimedia}
        \li Classes for audio, video, radio and camera functionality.
    \row
        \li \l{Qt Multimedia Widgets}
        \li Widget-based classes for implementing multimedia functionality.
    \row
        \li \l{Qt Network}
        \li Classes to make network programming easier and more portable.
    \row
        \li \l{Qt QML}
        \li Classes for QML and JavaScript languages.
    \row
        \li \l{Qt Quick}
        \li A declarative framework for building highly dynamic applications
            with custom user interfaces.
    \row
        \li \l{Qt Quick Controls}
        \li Reusable Qt Quick based UI controls to create classic desktop-style
            user interfaces.
    \row
        \li \l{Qt Quick Dialogs}
        \li Types for creating and interacting with system dialogs from a
            Qt Quick application.
    \row
        \li \l{Qt Quick Layouts}
        \li Layouts are items that are used to arrange Qt Quick 2 based items in
            the user interface.
    \row
        \li \l{Qt SQL}
        \li Classes for database integration using SQL.
    \row
        \li \l{Qt Test}
        \li Classes for unit testing Qt applications and libraries.
    \row
        \li \l{Qt WebKit}
        \li Classes for a WebKit2 based implementation and a new QML API.
            See also Qt WebKit Widgets in the add-on modules.
    \row
        \li \l{Qt WebKit Widgets}
        \li WebKit1 and QWidget-based classes from Qt 4.
    \row
        \li \l{Qt Widgets}
        \li Classes to extend Qt GUI with C++ widgets.
    \endtable

    If you use \l qmake to build your projects, the \l{Qt Core} and \l{Qt GUI}
    modules are included by default. To link only against Qt Core, add
    the following line to your \c .pro file:

    \code
    QT -= gui
    \endcode

    On Windows, if you do not use \l qmake
    or other build tools such as \l{CMake Manual}{CMake}, you also need to link against
    the \c qtmain library.

    \section1 Qt Add-Ons

    \e{Qt Add-On} modules bring additional value for specific purposes. These
    modules may only be available on some development platform. Many add-on
    modules are either feature-complete and exist for backwards compatibility,
    or are only applicable to certain platforms. Each add-on module specifies
    its compatibility promise separately.

    The Qt installers include the option of downloading the add-ons. For more
    information, visit the \l{Getting Started with Qt} page.

    The following table lists the Qt add-ons:

    \table 80%
    \header
        \li Module
        \li Development Platforms
        \li Target Platforms
        \li Description
    \row
        \li \l{Active Qt}
        \li \l{Qt for Windows}{Windows}
        \li
        \li Classes for applications which use ActiveX and COM
    \row
        \li \l{Enginio Manual}{Enginio}
        \li All
        \li All
        \li A Backend-as-a-Service solution to ease the backend development for
            connected and data-driven applications.
    \row
        \li \l{Qt Android Extras}
        \li All
        \li \l{Qt for Android}{Android}
        \li Provides platform-specific APIs for Android.
    \row
        \li \l{Qt Bluetooth}
        \li All
        \li \l{Qt for Android}{Android}, \l{Qt for Linux/X11}{Linux}, \l{Qt for BlackBerry}{Blackberry}
        \li Provides access to Bluetooth hardware.
    \row
        \li \l{Qt Concurrent}
        \li
        \li
        \li Classes for writing multi-threaded programs without using low-level
            threading primitives.
    \row
        \li \l{Qt D-Bus}
        \li Unix-based
        \li
        \li Classes for inter-process communication over the D-Bus protocol.
    \row
        \li \l{Qt Graphical Effects}
        \li All
        \li
        \li Graphical effects for use with Qt Quick 2.
    \row
        \li \l{Qt Image Formats}
        \li All
        \li
        \li Plugins for additional image formats: TIFF, MNG, TGA, WBMP.
    \row
        \li \l{Qt Mac Extras}
        \li All
        \li \l{Qt for Mac OS X}{Mac OS X}
        \li Provides platform-specific APIs for Mac OS X.
    \row
        \li \l{Qt NFC}
        \li All
        \li \l{Qt for BlackBerry}{Blackberry}
        \li Provides access to Near-Field communication (NFC) hardware.
    \row
        \li \l{Qt OpenGL}
        \li
        \li
        \li OpenGL support classes.
        \note Provided to ease porting from Qt 4.x. Please use the QOpenGL
        classes in \l{Qt GUI} for new code
    \row
        \li \l {Qt Positioning}
        \li All
        \li
        \li Provides access to position, satellite and area monitoring classes.
    \row
        \li \l{Qt Print Support}
        \li All
        \li
        \li Classes to make printing easier and more portable.
    \row
        \li \l{Qt Quick 1 Reference Documentation}{Qt Declarative}
        \li All
        \li
        \li Qt Declarative is provided for \l{Qt 4.8 Reference Documentation}{Qt 4}
        compatibility. The documentation is available through the Qt 4.8
        \l{Qt Quick 1 Reference Documentation}{Qt Quick} documentation.
    \row
        \li \l{Qt Script}
        \li All
        \li
        \li Classes for making Qt applications scriptable. Provided for Qt 4.x
            compatibility. Please use the QJS* classes in the \l{Qt QML} module for
            new code.
    \row
        \li \l{Qt Script Tools}
        \li All
        \li
        \li Additional components for applications that use \l{Qt Script}.
    \row
        \li \l{Qt Sensors}
        \li All
        \li \l{Qt for Android}{Android}, \l{Qt for BlackBerry}{Blackberry}, \l{Qt for iOS}, \l{Qt for WinRT}{WinRT} and Mer.
        \li Provides access to sensor hardware and motion gesture recognition.
    \row
        \li \l{Qt Serial Port}
        \li All
        \li \l{Qt for Windows}{Windows}, \l{Qt for Linux/X11}{Linux}, and \l{Qt for Mac OS X}{Mac OS X}.
        \li Provides access to hardware and virtual serial ports.
    \row
        \li \l{Qt SVG}
        \li All
        \li
        \li Classes for displaying the contents of SVG files. Supports a subset of the
            \l{http://www.w3.org/TR/SVGTiny12/}{SVG 1.2 Tiny} standard.
    \row
        \li \l{Qt WebSockets}
        \li All
        \li All
        \li Provides WebSocket communication compliant with \l{http://tools.ietf.org/html/rfc6455} {RFC 6455}.
    \row
        \li \l{Qt Windows Extras}
        \li All
        \li \l{Qt for Windows}{Windows}
        \li Provides platform-specific APIs for Windows.
    \row
        \li \l{Qt X11 Extras}
        \li All
        \li \l{Qt for Linux/X11}{Linux/X11}
        \li Provides platform-specific APIs for X11.
    \row
        \li \l{Qt XML}
        \li
        \li
        \li C++ implementations of SAX and DOM.
            \note Deprecated, please use QXmlStreamReader and QXmlStreamWriter
            for new functionality.
    \row
        \li \l{Qt XML Patterns}
        \li
        \li
        \li Support for XPath, XQuery, XSLT and XML schema validation.
    \endtable

    \section1 Qt Tools

    \e{Qt Tools} run on all the supported development platforms and facilitate
    the development and design of applications.

    The following table lists the Qt tools:

    \table 80%
    \header
        \li Tool
        \li Description
    \row
        \li \l{Qt Designer}
        \li Classes for extending \QD.
    \row
        \li \l{Qt Help}
        \li Classes for integrating online documentation into applications, similar to Qt Assistant.
    \row
        \li \l{Qt UI Tools}
        \li Classes to handle the forms created in \QD.
    \endtable

    \section1 Where to Go from Here

    We invite you to explore the rest of Qt. We prepared overviews which help
    you decide which APIs to use and our examples demonstrate how to use our
    API.

    \list
    \li \l{Qt Overviews} - list of topics about application development
    \li \l{Qt Examples and Tutorials}{Examples and Tutorials} - code samples and tutorials
    \li \l{Qt Reference Pages} - a listing of C++ and QML APIs
    \endlist

*/
