/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see http://www.qt.io/terms-conditions. For further
** information use the contact form at http://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: http://www.gnu.org/copyleft/fdl.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \keyword Supported Platforms
    \page supported-platforms.html
    \title Community Supported Platforms
    \brief The platforms supported by Qt.

    Qt is a commercial and open source licensed cross-platform application
    and UI framework. It is developed by The Qt Company, a solely owned
    entity of Digia Plc, together with the Qt Project Community under an
    open source governance model.

    Using Qt, you can write GUI applications once and deploy them
    across desktop, mobile and embedded operating systems without
    rewriting the source code.

    Qt is supported on a variety of 32-bit and 64-bit platforms,
    and can usually be built on each platform with GCC, a vendor-supplied
    compiler, or a third party compiler. Open GL (ES) 2.0,
    DirectX 9 (with ANGLE), or an \l {Qt Quick 2D Renderer} {alternative
    renderer} is required for \l [QtQuick] {Qt Quick} 2.
    \l [QtWidgets] {Qt Widgets}{Widgets} can be used also without
    hardware acceleration.

    Not all platforms supported by the Community are supported by The
    Qt Company, and vice versa.

    \list
        \li \l {Officially Supported Platforms} - Platforms supported
        by The Qt Company.
    \endlist

    In Qt 5 all platforms are created using the
    \l{Qt Platform Abstraction} (QPA), which makes it easier
    than before to port Qt into a new operating system.

    \section1 Desktop Platforms

    You can develop with Qt for the following desktop platforms:

    \list
        \li \l{Qt for Windows}{Windows}
        \li \l{Qt for Linux/X11}{Linux/X11}
        \li \l{Qt for OS X}{OS X}
    \endlist

    \section1 Embedded Platforms
    You can develop with Qt for the following embedded platforms:
    \list
        \li \l{Qt Enterprise Embedded}{Embedded Android}
        \li \l{Qt for Embedded Linux}{Embedded Linux}
        \li \l{Windows CE - Introduction to using Qt}{Windows Embedded (Compact and Standard)}
        \li Real-Time Operating Systems, such as \l{QNX}, VxWorks and INTEGRITY
    \endlist

    \section1 Mobile Platforms

    You can develop with Qt for the following mobile platforms supported
    by The Qt Company:

    \list
        \li \l{Qt for Android}{Android}
        \li \l{Qt for iOS}{iOS}
        \li \l{Qt for WinRT}{WinRT} (including Windows Phone)
    \endlist

    The following platforms also support Qt:

    \list
        \li \l{Qt for BlackBerry 10}{BlackBerry 10}
        \li \l{Sailfish OS}
    \endlist

    Work in progress ports of Qt exist for:

    \list
        \li \l{Tizen}
    \endlist

    For more information about the Qt modules for mobile platforms, visit
    the \l{Mobile APIs} page.

    \section1 Reference Configurations

    A \e {reference configuration} is a combination of an operating system version,
    a compiler version, and a graphics system. The following table lists the
    configurations that are tested by the Qt Project:

    \table
    \header \li Platform
                                     \li Compiler
    \row    \li Ubuntu Linux 14.04, X11 (64-bit)
                                     \li As provided by Ubuntu
    \row    \li RedHat 6.6, X11 (64-bit)
                                     \li As provided by Red Hat
    \row    \li openSUSE 13.1, X11 (64-bit)
                                     \li As provided by SUSE
    \row    \li Microsoft Windows 7 (32-bit)
                                     \li MSVC 2010 SP1
    \row    \li Microsoft Windows 7 (32-bit)
                                     \li \l{http://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win32/Personal%20Builds/mingw-builds/4.9.1/threads-posix/dwarf/i686-4.9.1-release-posix-dwarf-rt_v3-rev2.7z/download}{MinGW-builds gcc 4.9.1 (32-bit)}
    \row    \li Microsoft Windows 8.1 (32-bit and 64-bit)
                                     \li MSVC 2012 SP2
    \row    \li Microsoft Windows 8.1 (32-bit and 64-bit)
                                     \li MSVC 2013 SP3
    \row    \li Microsoft Windows Phone 8.1 (64-bit)
                                     \li MSVC 2013 SP3
    \row    \li Microsoft Windows Runtime 8.1 (64-bit)
                                     \li MSVC 2013 SP3
    \row    \li Apple OS X 10.8 "Mountain Lion", Cocoa (64-bit)
                                     \li Clang as provided by Apple
    \row    \li Apple OS X 10.9 "Mavericks", Cocoa (64-bit)
                                     \li Clang as provided by Apple
    \row    \li Apple OS X 10.10 "Yosemite", Cocoa (64-bit)
                                     \li Clang as provided by Apple
    \row    \li Apple iOS 8 (64-bit)
                                     \li Clang as provided by Apple
    \row    \li Google Android 4.4
                                     \li As provided by Google (Android NDK Revision 10c)
    \endtable

    These reference configurations are run on the continuous integration (CI)
    system within Qt Project. In addition, they are subjected to unit test suite
    and other internal testing tools on a frequent basis (prior to new version
    releases, source tree branching, and at other significant period points in
    the development process). Errors or bugs discovered in these platforms are
    prioritized for correction. Significant errors discovered in tested
    configurations can impact release dates.

    Any configurations not listed above are not actively tested by the Qt
    Project. However, Qt may run on configurations other than those actively
    tested on, and additional configurations may be raised to tested state, if
    sufficient effort is made to bring continuous integration to an acceptable
    state for that particular configuration.

    In addition to the reference platforms Qt is occasionally tested on other
    configurations in which it is known to run well. These include, for example:

    \table
    \header \li Platform
                                     \li Compiler
    \row    \li Ubuntu Linux 11.10, X11 (32-bit and 64-bit)
                                     \li As provided by Ubuntu
    \row    \li Microsoft Windows CE 7.0
                                     \li MSVC 2008 SP1
    \row    \li Apple OS X 10.7 "Lion", Cocoa (64-bit)
                                     \li Clang as provided by Apple
    \endtable

    The Qt Company, Qt partners, open source projects and community users
    are able to provide assistance with various different supported
    platforms and configurations.

    \section1 Availability of Packages

    You can download the Qt 5 installers and source packages from the \l Downloads page.
    For more information, visit the \l{Getting Started with Qt} page.

    \section1 Deployment of Qt Applications

    The deployment procedure for each platform is different and they are
    covered in greater detail in their platform pages. Meanwhile, there is a
    deployment article for summarizing the deployment procedure in general.
    \list
    \li \l{Deploying Qt Applications}
        \list
            \li \l{Platform and Compiler Notes - Android#Deployment}{Android}
            \li \l{Deployment on BlackBerry 10}{BlackBerry}
            \li \l{Qt for iOS}{iOS}
            \li \l{Qt for Linux/X11 - Deployment}{Linux/X11}
            \li \l{Qt for OS X - Deployment}{OS X}
            \li \l{Qt for Windows - Deployment}{Windows}
        \endlist
    \endlist

    \section1 General Legal Disclaimer

    Please note that Qt is offered on an "as is" basis without warranty
    of any kind and that our products are not error or bug free. To the maximum extent
    permitted by applicable law, The Qt Company on behalf of itself and its suppliers, disclaims all
    warranties and conditions, either express or implied, including, but not limited to,
    implied warranties of merchantability, fitness for a particular purpose, title and
    non-infringement with regard to the Licensed Software.

*/
