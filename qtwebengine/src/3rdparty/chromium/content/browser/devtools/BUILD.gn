# Copyright 2014 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//tools/grit/grit_rule.gni")

# In GYP: devtools_resources target.
group("resources") {
  deps = [
    ":devtools_resources",
    ":devtools_protocol_constants",
    ":devtools_protocol_handler",
  ]
}

# In GYP: devtools_resources action in the devtools_resources target.
grit("devtools_resources") {
  source = "$root_gen_dir/devtools/devtools_resources.grd"

  # TOOD(brettw) remove this so the output file goes into the target_gen_dir,
  # but keep this for not for GYP compat.
  output_dir = "$root_gen_dir/webkit"
  outputs = [
    "grit/devtools_resources.h",
    "devtools_resources.pak",
    "grit/devtools_resources_map.cc",
    "grit/devtools_resources_map.h",
  ]

  defines = [
    "SHARED_INTERMEDIATE_DIR=" + rebase_path(root_gen_dir, root_build_dir),
  ]

  deps = [
    # This is the action that generates out .grd input file.
    "//third_party/WebKit/public:blink_generate_devtools_grd",
  ]
}

action("gen_devtools_protocol_constants") {
  visibility = [ ":devtools_protocol_constants" ]

  script = "//content/public/browser/devtools_protocol_constants_generator.py"

  blink_protocol = "//third_party/WebKit/Source/devtools/protocol.json"
  browser_protocol = "browser_protocol.json"
  inputs = [ blink_protocol, browser_protocol ]

  outputs = [
    "$target_gen_dir/devtools_protocol_constants.cc",
    "$target_gen_dir/devtools_protocol_constants.h",
  ]

  args = [ "content" ] + rebase_path(outputs, root_build_dir) + [
    rebase_path(blink_protocol, root_build_dir),
    rebase_path(browser_protocol, root_build_dir),
  ]
}

action("gen_devtools_protocol_handler") {
  visibility = [ ":devtools_protocol_handler" ]

  script = "//content/browser/devtools/protocol/" +
      "devtools_protocol_handler_generator.py"

  blink_protocol = "//third_party/WebKit/Source/devtools/protocol.json"
  inputs = [ blink_protocol ]

  outputs = [
    "$target_gen_dir/protocol/devtools_protocol_handler_impl.cc",
    "$target_gen_dir/protocol/devtools_protocol_handler_impl.h",
  ]

  args = [
    rebase_path(blink_protocol, root_build_dir),
  ] + rebase_path(outputs, root_build_dir)
}

source_set("devtools_protocol_constants") {
  visibility = [ ":resources" ]
  sources = get_target_outputs(":gen_devtools_protocol_constants")
}

source_set("devtools_protocol_handler") {
  visibility = [ ":resources" ]
  sources = get_target_outputs(":gen_devtools_protocol_handler")
}
