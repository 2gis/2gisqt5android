include($QT_INSTALL_DOCS/global/qt-module-defaults.qdocconf)

# Name of the project which must match the outputdir. Determines the .index file
project = QtXmlPatterns
url = http://qt-project.org/doc/qt-$QT_VER

# Directories in which to search for files to document and images.
# By default set to the root directory of the project for sources
# and headers and qdoc will therefore generate output for each file.
# Images should be placed in <rootdir>/dic/images and examples in
# <rootdir>/examples.
# Paths are relative to the  location of this file.
exampledirs += ../../../examples \
               snippets

headerdirs += ..
imagedirs += images
sourcedirs += ..

depends += qtcore qtxml qtwidgets qtdesigner qtdoc

# The following parameters are for creating a qhp file, the qhelpgenerator
# program can convert the qhp file into a qch file which can be opened in
# Qt Assistant and/or Qt Creator.

# Defines the name of the project. You cannot use operators (+, =, -) in
# the name. Properties for this project are set using a qhp.<projectname>.property
# format.
qhp.projects = QtXmlPatterns

# Sets the name of the output qhp file.
qhp.QtXmlPatterns.file = qtxmlpatterns.qhp

# Namespace for the output file. This namespace is used to distinguish between
# different documentation files in Creator/Assistant.
qhp.QtXmlPatterns.namespace = org.qt-project.qtxmlpatterns.$QT_VERSION_TAG

# Title for the package, will be the main title for the package in
# Assistant/Creator.
qhp.QtXmlPatterns.indexTitle = Qt XML Patterns

# Only update the name of the project for the next variables.
qhp.QtXmlPatterns.virtualFolder  = qtxmlpatterns
qhp.QtXmlPatterns.subprojects = classes
qhp.QtXmlPatterns.subprojects.classes.title = C++ Classes
qhp.QtXmlPatterns.subprojects.classes.indexTitle = Qt XML Patterns C++ Classes
qhp.QtXmlPatterns.subprojects.classes.selectors = class fake:headerfile
qhp.QtXmlPatterns.subprojects.classes.sortPages = true

navigation.landingpage = "Qt XML Patterns"
navigation.cppclassespage = "Qt XML Patterns C++ Classes"
