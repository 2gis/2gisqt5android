/****************************************************************************
**
** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/legal
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Digia.  For licensing terms and
** conditions see http://qt.digia.com/licensing.  For further information
** use the contact form at http://qt.digia.com/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.  Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: http://www.gnu.org/copyleft/fdl.html.
** $QT_END_LICENSE$
**
****************************************************************************/
/*!
    \title Qt Quick Examples - Touch Interaction
    \example touchinteraction
    \brief This is a collection of QML Touch Interaction examples.
    \image qml-touchinteraction-example.png

    This is a collection of small QML examples relating to touch interaction methods.

    Multipoint Flames demonstrates distinguishing different fingers in a MultiPointTouchArea, by assigning a different colored flame to each touch point.
    The MultipointTouchArea sets up multiple touch points:
    \snippet touchinteraction/multipointtouch/multiflame.qml 0
    The flames are then simply bound to the coordiates of the touch point, and whether it is currently pressed, like so:
    \snippet touchinteraction/multipointtouch/multiflame.qml 1

    Bear-Whack demonstrates using a MultiPointTouchArea to add multiple finger support to a simple game. The interaction with the game
    is done through a SpriteGoal that follows the TouchPoint. The TouchPoints added to the MultiPointTouchArea are a component with all
    this logic embedded into it:
    \snippet touchinteraction/multipointtouch/content/AugmentedTouchPoint.qml 0

    Flick Resize uses a PinchArea to allow Pinch-to-Resize behavior. This is easily achieved just by listening to the PinchArea signals and responding
    to user input.
    \snippet touchinteraction/pincharea/flickresize.qml 0

    Flickable is a simple example demonstrating the Flickable type. The object inside the flickable is very big, but the flickable itself is very small:
    \snippet touchinteraction/flickable/basic-flickable.qml 0

    Corkboards shows a more complex Flickable usecase, with types on the flickable that respond to mouse and keyboard interaction.
    This doesn't require special code, the Qt Quick types automatically cooperate with Flickable for accepting the touch events.
*/
